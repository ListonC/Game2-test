OBJECTIVE: LINKAGE
• Need to add First Turn room // DONE
	• Duplicate the Booter room, remove what's unnecessary from original, and change Duplicate to First Turn room. // DONE
		• Need to audit obj_Globals. Perhaps move to First Turn room. // DONE
		• First Turn room sets up player/boat as configured in Front End // DONE
			• Need to fix Front End so that if a different captain is picked, bonuses are reset. (Just in case) // EFFECTIVELY DONE
• Need to get Port Room to properly exit to Map room.
	• Add an 'Exit' button to go back to Port // DONE
	• 'Set Sail' plays animation and goes to End Turn room // IN PROGRESS
• Need to further develop Map room
	• Need to develop camera sytem. // DONE
		• Camera object needs to lerp slowly to mouse cursor // DONE
		• Camera cannot go outside room boundaries. // DONE
	• Need Passengers wanting to leave for another Port // DONE
	• Need "Selected Port" to be shown/highlighted. // DONE
	• Need to indicate how many rations journey will consume // DONE
	• Need to indicate how much time journey will take // SORTA DONE
	• Need to show how many Passengers at each port, and be able to board passengers. // DONE
• Need Map Room to for-reals transition to other port, increment turn.
	• CurrentTown effects room numbers
• Need to add End Turn room
	• Increment G.TurnNumber // DONE
	• Evaluate and subtract ration barrels // DONE
	• Update WorldQtyTable // DONE
	• Show time taken to arrive at port. (Will be used later to rank who goes first) // DONE
	• Add Ticket Revenues to Cash. //DONE
	• Draw Event displays info breakdown. // DONE
	• Dump player at next Port room. // DONE.
	
	
PASSENGER SYSTEM:

Each turn, the world has a random number of people that want to travel to a different port. These people will pay any player for a
ticket to ride on their boat. 1 Passenger also brings their personal belongings, which is equivalent to 1 barrel of space. Because of
this, the Player must first have available space and Cooks for a Passenger, and thus must push a button to Board Passengers. Once 
pressed, that button will fill the boat with passengers until there are either no passengers left to board, or until there is no more
space on board, or until there aren't enough Cooks to service more Passengers. Since passengers have to be fed and cared for, 
passengers also count as People that consume rations. Passengers cannot board if there are no Cooks on board. 1 Cook can accomodate 
5 passengers (tentative).

Passengers are distributed based on a ratio multiplier established by the sum attractivenes of all ports. The most attractive port
gets the bonus remainder of passengers after the distribution, if there are any. The Total Passenger demand is effected by the
Advertising cost and ticket price.

If there are other players at that port, then Passengers have a choice as to which boat they sail on. The two factors that determine 
this is the Ticket Price and Advertising Spent. In the event that more than 1 player is at current town, sum the advertising 
expenditures and average that number. For each 1000 a Player spent *below* that average, that Player has to take 1 Passenger away
from a random port and put that passenger in a queue. For each 1000 a Player spent *above* that average, that Player gets to take 1
Passenger from that queue, and assign them a random Port--with the more attractive ports being a more likely destination. Then,
take the Ticket Prices across each player and average them. For each 100 coins a Player has Set *above* that average, that Player
must take 1 Passenger away from a random port and put that passenger in a queue. For each 100 coins a player has Set *below* that
average, a Player gets to take 1 passenger from that queue and assign them a destination--with more attractive destinations being
more likely.


BOARDING PASSENGERS:

Passengers are boarded by clicking on the 'Board Passengers' button on the screen. Order of operations:

• Update MyShip Destination to PassengersAtPort[slot]. // done
• Check Space Remaining vs. Passengers On Board (starts at 0).
	• If yes, Check Cook Skill vs. Passengers On Board (POB)
		• If yes, Subtract 1 Passenger from PassengersAtPort[slot] and add 1 Passenger to MyShip.
		• repeat (PassengersAtPort[slot]);
• After adding Passengers, re-calculate Rations consumed.
	IF PLAYER EXITS ROOM, RESET MyShip Passengers to 0.
	IF PLAYER HITS UNDO, RETURN MyShip Passengers to PassengersAtPort[slot]